# PIPELINE DEFINITION
# Name: test-kubeflow-pipeline
# Description: General pipeline for MD setup given PDB ID.
# Inputs:
#    pdb_code: str
components:
  comp-add-ions:
    executorLabel: exec-add-ions
    inputDefinitions:
      artifacts:
        input_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        output_ions_crd_filename:
          parameterType: STRING
        output_ions_pdb_filename:
          parameterType: STRING
        output_ions_top_filename:
          parameterType: STRING
        properties:
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-create-water-box:
    executorLabel: exec-create-water-box
    inputDefinitions:
      artifacts:
        input_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        output_solv_crd_filename:
          parameterType: STRING
        output_solv_pdb_filename:
          parameterType: STRING
        output_solv_top_filename:
          parameterType: STRING
        properties:
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-fetch-pdb-protein:
    executorLabel: exec-fetch-pdb-protein
    inputDefinitions:
      parameters:
        pdb_code:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-prep-amber-to-pdb:
    executorLabel: exec-prep-amber-to-pdb
    inputDefinitions:
      artifacts:
        input_minimization_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
        input_topology_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-prep-amber-topology:
    executorLabel: exec-prep-amber-topology
    inputDefinitions:
      artifacts:
        input_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        properties:
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-prep-pdb-for-amber:
    executorLabel: exec-prep-pdb-for-amber
    inputDefinitions:
      artifacts:
        input_pdb_dir_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
    outputDefinitions:
      artifacts:
        output_amber_dir_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-simulate-one-input:
    executorLabel: exec-simulate-one-input
    inputDefinitions:
      artifacts:
        input_top_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        input_crd_filename:
          parameterType: STRING
        input_top_filename:
          parameterType: STRING
        output_log_filename:
          parameterType: STRING
        output_rst_filename:
          parameterType: STRING
        output_traj_filename:
          parameterType: STRING
        properties:
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-simulate-one-input-2:
    executorLabel: exec-simulate-one-input-2
    inputDefinitions:
      artifacts:
        input_top_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        input_crd_filename:
          parameterType: STRING
        input_top_filename:
          parameterType: STRING
        output_log_filename:
          parameterType: STRING
        output_rst_filename:
          parameterType: STRING
        output_traj_filename:
          parameterType: STRING
        properties:
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-simulate-one-input-3:
    executorLabel: exec-simulate-one-input-3
    inputDefinitions:
      artifacts:
        input_top_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        input_crd_filename:
          parameterType: STRING
        input_top_filename:
          parameterType: STRING
        output_log_filename:
          parameterType: STRING
        output_rst_filename:
          parameterType: STRING
        output_traj_filename:
          parameterType: STRING
        properties:
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-simulate-two-inputs:
    executorLabel: exec-simulate-two-inputs
    inputDefinitions:
      artifacts:
        input_crd_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
        input_top_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        input_crd_filename:
          parameterType: STRING
        input_top_filename:
          parameterType: STRING
        output_log_filename:
          parameterType: STRING
        output_rst_filename:
          parameterType: STRING
        output_traj_filename:
          parameterType: STRING
        properties:
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-simulate-two-inputs-2:
    executorLabel: exec-simulate-two-inputs-2
    inputDefinitions:
      artifacts:
        input_crd_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
        input_top_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        input_crd_filename:
          parameterType: STRING
        input_top_filename:
          parameterType: STRING
        output_log_filename:
          parameterType: STRING
        output_rst_filename:
          parameterType: STRING
        output_traj_filename:
          parameterType: STRING
        properties:
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-simulate-two-inputs-3:
    executorLabel: exec-simulate-two-inputs-3
    inputDefinitions:
      artifacts:
        input_crd_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
        input_top_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        input_crd_filename:
          parameterType: STRING
        input_top_filename:
          parameterType: STRING
        output_log_filename:
          parameterType: STRING
        output_rst_filename:
          parameterType: STRING
        output_traj_filename:
          parameterType: STRING
        properties:
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-simulate-two-inputs-4:
    executorLabel: exec-simulate-two-inputs-4
    inputDefinitions:
      artifacts:
        input_crd_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
        input_top_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
      parameters:
        input_crd_filename:
          parameterType: STRING
        input_top_filename:
          parameterType: STRING
        output_log_filename:
          parameterType: STRING
        output_rst_filename:
          parameterType: STRING
        output_traj_filename:
          parameterType: STRING
        properties:
          parameterType: STRUCT
    outputDefinitions:
      artifacts:
        output_path:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-add-ions:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - add_ions
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'biobb_amber'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef add_ions(\n        properties: dict,\n        output_ions_pdb_filename:\
          \ str,\n        output_ions_top_filename: str,\n        output_ions_crd_filename:\
          \ str,\n        input_path: dsl.InputPath('Directory'),\n        output_path:\
          \ dsl.OutputPath('Directory'),\n):\n    \"\"\"Adds ions in solvated water\
          \ box.\"\"\"\n\n    # Import modules\n    import os\n    from biobb_amber.leap.leap_add_ions\
          \ import leap_add_ions\n\n    if os.getenv(\"AMBERHOME\") is None:\n   \
          \     os.environ[\"AMBERHOME\"] = \"/opt/conda\"\n\n    # Create prop dict\
          \ and inputs/outputs\n    input_pdb_path = input_path + \"/\" + \"structure.solv.pdb\"\
          \n    os.makedirs(output_path, exist_ok=True)\n    output_ions_pdb_path\
          \ = output_path + \"/\" + output_ions_pdb_filename\n    output_ions_top_path\
          \ = output_path + \"/\" + output_ions_top_filename\n    output_ions_crd_path\
          \ = output_path + \"/\" + output_ions_crd_filename\n\n    # Create and launch\
          \ bb\n    leap_add_ions(input_pdb_path=input_pdb_path,\n            output_pdb_path=output_ions_pdb_path,\n\
          \            output_top_path=output_ions_top_path,\n            output_crd_path=output_ions_crd_path,\n\
          \            properties=properties)\n\n"
        image: amber_bio:latest
    exec-create-water-box:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - create_water_box
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef create_water_box(\n        output_solv_pdb_filename: str,\n \
          \       output_solv_top_filename: str,\n        output_solv_crd_filename:\
          \ str,\n        properties: dict,\n        input_path: dsl.InputPath('Directory'),\n\
          \        output_path: dsl.OutputPath('Directory'),\n):\n    \"\"\"Creates\
          \ a unit cell around protein (PBD input filepath)\n    and solvates with\
          \ water.\"\"\"\n\n    # Import modules\n    import os\n    from biobb_amber.leap.leap_solvate\
          \ import leap_solvate\n\n    if os.getenv(\"AMBERHOME\") is None:\n    \
          \    os.environ[\"AMBERHOME\"] = \"/opt/conda\"\n\n    # Inputs and outputs\n\
          \    input_pdb_path = input_path + \"/\" + 'structure.ambpdb.pdb'\n    os.makedirs(output_path,\
          \ exist_ok=True)\n    output_solv_pdb_path = output_path + \"/\" + output_solv_pdb_filename\n\
          \    output_solv_top_path = output_path + \"/\" + output_solv_top_filename\n\
          \    output_solv_crd_path = output_path + \"/\" + output_solv_crd_filename\n\
          \n    {\n        \"forcefield\" : [\"protein.ff14SB\"],\n        \"water_type\"\
          : \"TIP3PBOX\",\n        \"distance_to_molecule\": \"9.0\",   \n       \
          \ \"box_type\": \"truncated_octahedron\"\n    }\n\n    # Create and launch\
          \ bb\n    leap_solvate(\n        input_pdb_path=input_pdb_path,\n      \
          \  output_pdb_path=output_solv_pdb_path,\n        output_top_path=output_solv_top_path,\n\
          \        output_crd_path=output_solv_crd_path,\n        properties=properties\n\
          \    )\n\n"
        image: amber_bio:latest
    exec-fetch-pdb-protein:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - fetch_pdb_protein
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'biobb_io' &&\
          \ \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef fetch_pdb_protein(pdb_code: str, output_path: dsl.OutputPath('Directory'))\
          \ -> None:\n    \"\"\"Fetches a PDB protein using its code.\n\n    Returns\
          \ path to downloaded PDB file.\"\"\"\n\n    import os\n    from biobb_io.api.pdb\
          \ import pdb\n\n    prop = {\n        'pdb_code': pdb_code\n    }\n\n  \
          \  os.makedirs(output_path, exist_ok=True)\n    output_pdb_path = output_path\
          \ + '/protein.pdb'\n\n    # Create and launch bb\n    pdb(output_pdb_path=output_pdb_path,\n\
          \        properties=prop)\n\n"
        image: python:3.9
    exec-prep-amber-to-pdb:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - prep_amber_to_pdb
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef prep_amber_to_pdb(\n    input_topology_path: dsl.InputPath('Directory'),\n\
          \    input_minimization_path: dsl.InputPath('Directory'),\n    output_path:\
          \ dsl.OutputPath('Directory'),\n):\n    \"\"\"Converts AMBER protein representation\
          \ to PDB.\n\n    Returns filepath to \"\"\"\n\n    # Import modules\n  \
          \  import os\n    from biobb_amber.ambpdb.amber_to_pdb import amber_to_pdb\n\
          \n    # Create input/output paths\n    input_top_path = input_topology_path\
          \ + \"/structure.leap.top\"\n    input_crd_path = input_minimization_path\
          \ + \"/sander.n_min.rst\"\n    os.makedirs(output_path, exist_ok=True)\n\
          \    output_ambpdb_path = output_path + '/structure.ambpdb.pdb'\n\n    #\
          \ Create and launch bb\n    amber_to_pdb(\n        input_top_path=input_top_path,\n\
          \        input_crd_path=input_crd_path,\n        output_pdb_path=output_ambpdb_path\n\
          \    )\n\n"
        image: amber_bio:latest
    exec-prep-amber-topology:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - prep_amber_topology
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef prep_amber_topology(\n    properties: Dict[str, Any],\n    input_path:\
          \ dsl.InputPath('Directory'),\n    output_path: dsl.OutputPath('Directory'),\n\
          ) -> None:\n    \"\"\"Builds AMBER topology for a given PDB protein file\
          \ path.\n\n    Returns a dictionary of three filepaths for output PDB, \n\
          \    AMBER topology (top) and coordinate (crd) files.\"\"\"\n\n    # Import\
          \ module\n    import os\n    from biobb_amber.leap.leap_gen_top import leap_gen_top\n\
          \n    # Workaround because image is buggy\n    # Doesn't recognise AMBERHOME\
          \ for some reason\n    # Even though running image in terminal works...\n\
          \    if os.getenv(\"AMBERHOME\") is None:\n        os.environ[\"AMBERHOME\"\
          ] = \"/opt/conda\"\n\n    # Paths\n    os.makedirs(output_path, exist_ok=True)\n\
          \    input_pdb_path = input_path + '/structure.pdb4amber.pdb'\n    output_pdb_path\
          \ = output_path + '/structure.leap.pdb'\n    output_top_path = output_path\
          \ + '/structure.leap.top'\n    output_crd_path = output_path + '/structure.leap.crd'\n\
          \n    # Create and launch bb\n    leap_gen_top(\n        input_pdb_path=input_pdb_path,\
          \ \n        output_pdb_path=output_pdb_path, \n        output_top_path=output_top_path,\
          \ \n        output_crd_path=output_crd_path, \n        properties=properties\n\
          \    )\n\n"
        image: amber_bio:latest
    exec-prep-pdb-for-amber:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - prep_pdb_for_amber
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef prep_pdb_for_amber(\n    input_pdb_dir_path: dsl.InputPath('Directory'),\n\
          \    output_amber_dir_path: dsl.OutputPath('Directory')\n) -> None:\n  \
          \  \"\"\"Prepares (cleans) fetched PDB files for AMBER analysis.\n\n   \
          \ For instance, relabels PDB codes for cysteines forming\n    disulphide\
          \ bridges for proper AMBER recognition.\"\"\"\n\n    # Import modules\n\
          \    import os\n    from biobb_amber.pdb4amber.pdb4amber_run import pdb4amber_run\n\
          \n    # Create input/output paths\n    input_pdb_path = input_pdb_dir_path\
          \ + '/protein.pdb'\n    os.makedirs(output_amber_dir_path, exist_ok=True)\n\
          \    output_pdb_path = output_amber_dir_path + '/structure.pdb4amber.pdb'\n\
          \n    # Create and launch bb\n    pdb4amber_run(input_pdb_path=input_pdb_path,\n\
          \                output_pdb_path=output_pdb_path)\n\n"
        image: quay.io/biocontainers/biobb_amber:5.0.4--pyhdfd78af_0
    exec-simulate-one-input:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - simulate_one_input
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef simulate_one_input(\n    properties: Dict[str, Any],\n    output_traj_filename:\
          \ str,\n    output_rst_filename: str,\n    output_log_filename: str,\n \
          \   input_top_path: dsl.InputPath('Directory'),\n    input_top_filename:\
          \ str,\n    # input_crd_path: dsl.InputPath('Directory'),\n    input_crd_filename:\
          \ str,\n    output_path: dsl.OutputPath('Directory'),\n):\n    \"\"\"\n\
          \    Run a simulation with given parameters with AmberTools Sander.\n\n\
          \    Accepts only one input path, as a Kubeflow Go component throws an error\
          \ \n    if the same InputPath is passed to two different function InputPath\
          \ parameters.\n    Example:\n\n    # KFP driver: driver.Container(\n   \
          \ #     pipelineName=test-kubeflow-pipeline, runID=24e1e2c6-e639-4f87-97ab-953608807c2e,\
          \ \n    #     task=\"simulate\", component=\"comp-simulate\", dagExecutionID=44,\
          \ componentSpec) \n    #     failed: rpc error: code = AlreadyExists desc\
          \ = Given event already exists: \n    #     artifact_id: 28\n    # execution_id:\
          \ 48\n    # path {\n    #     steps {\n    #         key: \"input_top_path_x\"\
          \n    #     }\n    # }\n\n    Inputs:\n    - properties: Dict containing\
          \ simulation parameters.\n    - output_traj_filename: Desired name of trajectory\
          \ file. (NB May not be created)\n    - output_rst_filename: Desired name\
          \ of restart file.\n    - output_log_filename: Desired name of log file.\n\
          \    - input_path: Path to input files from previous stage.\n\n    Creates\
          \ folder with outputs.\n    \"\"\"\n\n    # Modify inputs/outputs\n    input_top_path_complete\
          \ = input_top_path + \"/\" + input_top_filename # \"structure.leap.top\"\
          \n    input_crd_path_complete = input_top_path + \"/\" + input_crd_filename\
          \ # \"structure.leap.crd\"\n\n    # Import shenanigans\n    # from simulate\
          \ import _simulate\n\n    # Import module\n    import os\n    from biobb_amber.sander.sander_mdrun\
          \ import sander_mdrun\n\n    os.makedirs(output_path, exist_ok=True)\n\n\
          \    # TODO: look into using os.path.join - but struggles with slashes?\n\
          \    # or just add a `/` here...\n    output_h_min_traj_path = output_path\
          \ + \"/\" + output_traj_filename\n    output_h_min_rst_path = output_path\
          \ + \"/\" + output_rst_filename\n    output_h_min_log_path = output_path\
          \ + \"/\" + output_log_filename\n\n\n    # Create and launch bb\n    sander_mdrun(\n\
          \        input_top_path=input_top_path_complete,\n        input_crd_path=input_crd_path_complete,\n\
          \        input_ref_path=input_crd_path_complete,\n        output_traj_path=output_h_min_traj_path,\n\
          \        output_rst_path=output_h_min_rst_path,\n        output_log_path=output_h_min_log_path,\n\
          \        properties=properties\n    )\n\n"
        image: amber_bio:latest
    exec-simulate-one-input-2:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - simulate_one_input
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef simulate_one_input(\n    properties: Dict[str, Any],\n    output_traj_filename:\
          \ str,\n    output_rst_filename: str,\n    output_log_filename: str,\n \
          \   input_top_path: dsl.InputPath('Directory'),\n    input_top_filename:\
          \ str,\n    # input_crd_path: dsl.InputPath('Directory'),\n    input_crd_filename:\
          \ str,\n    output_path: dsl.OutputPath('Directory'),\n):\n    \"\"\"\n\
          \    Run a simulation with given parameters with AmberTools Sander.\n\n\
          \    Accepts only one input path, as a Kubeflow Go component throws an error\
          \ \n    if the same InputPath is passed to two different function InputPath\
          \ parameters.\n    Example:\n\n    # KFP driver: driver.Container(\n   \
          \ #     pipelineName=test-kubeflow-pipeline, runID=24e1e2c6-e639-4f87-97ab-953608807c2e,\
          \ \n    #     task=\"simulate\", component=\"comp-simulate\", dagExecutionID=44,\
          \ componentSpec) \n    #     failed: rpc error: code = AlreadyExists desc\
          \ = Given event already exists: \n    #     artifact_id: 28\n    # execution_id:\
          \ 48\n    # path {\n    #     steps {\n    #         key: \"input_top_path_x\"\
          \n    #     }\n    # }\n\n    Inputs:\n    - properties: Dict containing\
          \ simulation parameters.\n    - output_traj_filename: Desired name of trajectory\
          \ file. (NB May not be created)\n    - output_rst_filename: Desired name\
          \ of restart file.\n    - output_log_filename: Desired name of log file.\n\
          \    - input_path: Path to input files from previous stage.\n\n    Creates\
          \ folder with outputs.\n    \"\"\"\n\n    # Modify inputs/outputs\n    input_top_path_complete\
          \ = input_top_path + \"/\" + input_top_filename # \"structure.leap.top\"\
          \n    input_crd_path_complete = input_top_path + \"/\" + input_crd_filename\
          \ # \"structure.leap.crd\"\n\n    # Import shenanigans\n    # from simulate\
          \ import _simulate\n\n    # Import module\n    import os\n    from biobb_amber.sander.sander_mdrun\
          \ import sander_mdrun\n\n    os.makedirs(output_path, exist_ok=True)\n\n\
          \    # TODO: look into using os.path.join - but struggles with slashes?\n\
          \    # or just add a `/` here...\n    output_h_min_traj_path = output_path\
          \ + \"/\" + output_traj_filename\n    output_h_min_rst_path = output_path\
          \ + \"/\" + output_rst_filename\n    output_h_min_log_path = output_path\
          \ + \"/\" + output_log_filename\n\n\n    # Create and launch bb\n    sander_mdrun(\n\
          \        input_top_path=input_top_path_complete,\n        input_crd_path=input_crd_path_complete,\n\
          \        input_ref_path=input_crd_path_complete,\n        output_traj_path=output_h_min_traj_path,\n\
          \        output_rst_path=output_h_min_rst_path,\n        output_log_path=output_h_min_log_path,\n\
          \        properties=properties\n    )\n\n"
        image: amber_bio:latest
    exec-simulate-one-input-3:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - simulate_one_input
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef simulate_one_input(\n    properties: Dict[str, Any],\n    output_traj_filename:\
          \ str,\n    output_rst_filename: str,\n    output_log_filename: str,\n \
          \   input_top_path: dsl.InputPath('Directory'),\n    input_top_filename:\
          \ str,\n    # input_crd_path: dsl.InputPath('Directory'),\n    input_crd_filename:\
          \ str,\n    output_path: dsl.OutputPath('Directory'),\n):\n    \"\"\"\n\
          \    Run a simulation with given parameters with AmberTools Sander.\n\n\
          \    Accepts only one input path, as a Kubeflow Go component throws an error\
          \ \n    if the same InputPath is passed to two different function InputPath\
          \ parameters.\n    Example:\n\n    # KFP driver: driver.Container(\n   \
          \ #     pipelineName=test-kubeflow-pipeline, runID=24e1e2c6-e639-4f87-97ab-953608807c2e,\
          \ \n    #     task=\"simulate\", component=\"comp-simulate\", dagExecutionID=44,\
          \ componentSpec) \n    #     failed: rpc error: code = AlreadyExists desc\
          \ = Given event already exists: \n    #     artifact_id: 28\n    # execution_id:\
          \ 48\n    # path {\n    #     steps {\n    #         key: \"input_top_path_x\"\
          \n    #     }\n    # }\n\n    Inputs:\n    - properties: Dict containing\
          \ simulation parameters.\n    - output_traj_filename: Desired name of trajectory\
          \ file. (NB May not be created)\n    - output_rst_filename: Desired name\
          \ of restart file.\n    - output_log_filename: Desired name of log file.\n\
          \    - input_path: Path to input files from previous stage.\n\n    Creates\
          \ folder with outputs.\n    \"\"\"\n\n    # Modify inputs/outputs\n    input_top_path_complete\
          \ = input_top_path + \"/\" + input_top_filename # \"structure.leap.top\"\
          \n    input_crd_path_complete = input_top_path + \"/\" + input_crd_filename\
          \ # \"structure.leap.crd\"\n\n    # Import shenanigans\n    # from simulate\
          \ import _simulate\n\n    # Import module\n    import os\n    from biobb_amber.sander.sander_mdrun\
          \ import sander_mdrun\n\n    os.makedirs(output_path, exist_ok=True)\n\n\
          \    # TODO: look into using os.path.join - but struggles with slashes?\n\
          \    # or just add a `/` here...\n    output_h_min_traj_path = output_path\
          \ + \"/\" + output_traj_filename\n    output_h_min_rst_path = output_path\
          \ + \"/\" + output_rst_filename\n    output_h_min_log_path = output_path\
          \ + \"/\" + output_log_filename\n\n\n    # Create and launch bb\n    sander_mdrun(\n\
          \        input_top_path=input_top_path_complete,\n        input_crd_path=input_crd_path_complete,\n\
          \        input_ref_path=input_crd_path_complete,\n        output_traj_path=output_h_min_traj_path,\n\
          \        output_rst_path=output_h_min_rst_path,\n        output_log_path=output_h_min_log_path,\n\
          \        properties=properties\n    )\n\n"
        image: amber_bio:latest
    exec-simulate-two-inputs:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - simulate_two_inputs
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef simulate_two_inputs(\n    properties: Dict[str, Any],\n    output_traj_filename:\
          \ str,\n    output_rst_filename: str,\n    output_log_filename: str,\n \
          \   input_top_path: dsl.InputPath('Directory'),\n    input_top_filename:\
          \ str,\n    input_crd_path: dsl.InputPath('Directory'),\n    input_crd_filename:\
          \ str,\n    output_path: dsl.OutputPath('Directory'),\n):\n    \"\"\"\n\
          \    The same as simulate_one_input, but with two input paths which\n  \
          \  must be different.\n\n    Required as Kubeflow throws an error if the\
          \ same InputPath is passed\n    to two different function InputPath parameters.\n\
          \    \"\"\"\n\n    # Modify inputs/outputs\n    input_top_path_complete\
          \ = input_top_path + \"/\" + input_top_filename # \"structure.leap.top\"\
          \n    input_crd_path_complete = input_crd_path + \"/\" + input_crd_filename\
          \ # \"structure.leap.crd\"\n\n    # Import shenanigans\n    # from simulate\
          \ import _simulate\n\n    # Import module\n    import os\n    from biobb_amber.sander.sander_mdrun\
          \ import sander_mdrun\n\n    os.makedirs(output_path, exist_ok=True)\n\n\
          \    # TODO: look into using os.path.join - but struggles with slashes?\n\
          \    # or just add a `/` here...\n    output_h_min_traj_path = output_path\
          \ + \"/\" + output_traj_filename\n    output_h_min_rst_path = output_path\
          \ + \"/\" + output_rst_filename\n    output_h_min_log_path = output_path\
          \ + \"/\" + output_log_filename\n\n\n    # Create and launch bb\n    sander_mdrun(\n\
          \        input_top_path=input_top_path_complete,\n        input_crd_path=input_crd_path_complete,\n\
          \        input_ref_path=input_crd_path_complete,\n        output_traj_path=output_h_min_traj_path,\n\
          \        output_rst_path=output_h_min_rst_path,\n        output_log_path=output_h_min_log_path,\n\
          \        properties=properties\n    )\n\n"
        image: amber_bio:latest
    exec-simulate-two-inputs-2:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - simulate_two_inputs
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef simulate_two_inputs(\n    properties: Dict[str, Any],\n    output_traj_filename:\
          \ str,\n    output_rst_filename: str,\n    output_log_filename: str,\n \
          \   input_top_path: dsl.InputPath('Directory'),\n    input_top_filename:\
          \ str,\n    input_crd_path: dsl.InputPath('Directory'),\n    input_crd_filename:\
          \ str,\n    output_path: dsl.OutputPath('Directory'),\n):\n    \"\"\"\n\
          \    The same as simulate_one_input, but with two input paths which\n  \
          \  must be different.\n\n    Required as Kubeflow throws an error if the\
          \ same InputPath is passed\n    to two different function InputPath parameters.\n\
          \    \"\"\"\n\n    # Modify inputs/outputs\n    input_top_path_complete\
          \ = input_top_path + \"/\" + input_top_filename # \"structure.leap.top\"\
          \n    input_crd_path_complete = input_crd_path + \"/\" + input_crd_filename\
          \ # \"structure.leap.crd\"\n\n    # Import shenanigans\n    # from simulate\
          \ import _simulate\n\n    # Import module\n    import os\n    from biobb_amber.sander.sander_mdrun\
          \ import sander_mdrun\n\n    os.makedirs(output_path, exist_ok=True)\n\n\
          \    # TODO: look into using os.path.join - but struggles with slashes?\n\
          \    # or just add a `/` here...\n    output_h_min_traj_path = output_path\
          \ + \"/\" + output_traj_filename\n    output_h_min_rst_path = output_path\
          \ + \"/\" + output_rst_filename\n    output_h_min_log_path = output_path\
          \ + \"/\" + output_log_filename\n\n\n    # Create and launch bb\n    sander_mdrun(\n\
          \        input_top_path=input_top_path_complete,\n        input_crd_path=input_crd_path_complete,\n\
          \        input_ref_path=input_crd_path_complete,\n        output_traj_path=output_h_min_traj_path,\n\
          \        output_rst_path=output_h_min_rst_path,\n        output_log_path=output_h_min_log_path,\n\
          \        properties=properties\n    )\n\n"
        image: amber_bio:latest
    exec-simulate-two-inputs-3:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - simulate_two_inputs
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef simulate_two_inputs(\n    properties: Dict[str, Any],\n    output_traj_filename:\
          \ str,\n    output_rst_filename: str,\n    output_log_filename: str,\n \
          \   input_top_path: dsl.InputPath('Directory'),\n    input_top_filename:\
          \ str,\n    input_crd_path: dsl.InputPath('Directory'),\n    input_crd_filename:\
          \ str,\n    output_path: dsl.OutputPath('Directory'),\n):\n    \"\"\"\n\
          \    The same as simulate_one_input, but with two input paths which\n  \
          \  must be different.\n\n    Required as Kubeflow throws an error if the\
          \ same InputPath is passed\n    to two different function InputPath parameters.\n\
          \    \"\"\"\n\n    # Modify inputs/outputs\n    input_top_path_complete\
          \ = input_top_path + \"/\" + input_top_filename # \"structure.leap.top\"\
          \n    input_crd_path_complete = input_crd_path + \"/\" + input_crd_filename\
          \ # \"structure.leap.crd\"\n\n    # Import shenanigans\n    # from simulate\
          \ import _simulate\n\n    # Import module\n    import os\n    from biobb_amber.sander.sander_mdrun\
          \ import sander_mdrun\n\n    os.makedirs(output_path, exist_ok=True)\n\n\
          \    # TODO: look into using os.path.join - but struggles with slashes?\n\
          \    # or just add a `/` here...\n    output_h_min_traj_path = output_path\
          \ + \"/\" + output_traj_filename\n    output_h_min_rst_path = output_path\
          \ + \"/\" + output_rst_filename\n    output_h_min_log_path = output_path\
          \ + \"/\" + output_log_filename\n\n\n    # Create and launch bb\n    sander_mdrun(\n\
          \        input_top_path=input_top_path_complete,\n        input_crd_path=input_crd_path_complete,\n\
          \        input_ref_path=input_crd_path_complete,\n        output_traj_path=output_h_min_traj_path,\n\
          \        output_rst_path=output_h_min_rst_path,\n        output_log_path=output_h_min_log_path,\n\
          \        properties=properties\n    )\n\n"
        image: amber_bio:latest
    exec-simulate-two-inputs-4:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - simulate_two_inputs
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.11.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef simulate_two_inputs(\n    properties: Dict[str, Any],\n    output_traj_filename:\
          \ str,\n    output_rst_filename: str,\n    output_log_filename: str,\n \
          \   input_top_path: dsl.InputPath('Directory'),\n    input_top_filename:\
          \ str,\n    input_crd_path: dsl.InputPath('Directory'),\n    input_crd_filename:\
          \ str,\n    output_path: dsl.OutputPath('Directory'),\n):\n    \"\"\"\n\
          \    The same as simulate_one_input, but with two input paths which\n  \
          \  must be different.\n\n    Required as Kubeflow throws an error if the\
          \ same InputPath is passed\n    to two different function InputPath parameters.\n\
          \    \"\"\"\n\n    # Modify inputs/outputs\n    input_top_path_complete\
          \ = input_top_path + \"/\" + input_top_filename # \"structure.leap.top\"\
          \n    input_crd_path_complete = input_crd_path + \"/\" + input_crd_filename\
          \ # \"structure.leap.crd\"\n\n    # Import shenanigans\n    # from simulate\
          \ import _simulate\n\n    # Import module\n    import os\n    from biobb_amber.sander.sander_mdrun\
          \ import sander_mdrun\n\n    os.makedirs(output_path, exist_ok=True)\n\n\
          \    # TODO: look into using os.path.join - but struggles with slashes?\n\
          \    # or just add a `/` here...\n    output_h_min_traj_path = output_path\
          \ + \"/\" + output_traj_filename\n    output_h_min_rst_path = output_path\
          \ + \"/\" + output_rst_filename\n    output_h_min_log_path = output_path\
          \ + \"/\" + output_log_filename\n\n\n    # Create and launch bb\n    sander_mdrun(\n\
          \        input_top_path=input_top_path_complete,\n        input_crd_path=input_crd_path_complete,\n\
          \        input_ref_path=input_crd_path_complete,\n        output_traj_path=output_h_min_traj_path,\n\
          \        output_rst_path=output_h_min_rst_path,\n        output_log_path=output_h_min_log_path,\n\
          \        properties=properties\n    )\n\n"
        image: amber_bio:latest
pipelineInfo:
  description: General pipeline for MD setup given PDB ID.
  name: test-kubeflow-pipeline
root:
  dag:
    tasks:
      add-ions:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-add-ions
        dependentTasks:
        - create-water-box
        inputs:
          artifacts:
            input_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: create-water-box
          parameters:
            output_ions_crd_filename:
              runtimeValue:
                constant: structure.ions.crd
            output_ions_pdb_filename:
              runtimeValue:
                constant: structure.ions.pdb
            output_ions_top_filename:
              runtimeValue:
                constant: structure.ions.parmtop
            properties:
              runtimeValue:
                constant:
                  box_type: truncated_octahedron
                  forcefield:
                  - protein.ff14SB
                  ionic_concentration: 150.0
                  negative_ions_type: Cl-
                  neutralise: true
                  positive_ions_type: Na+
        taskInfo:
          name: add-ions
      create-water-box:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-create-water-box
        dependentTasks:
        - prep-amber-to-pdb
        inputs:
          artifacts:
            input_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: prep-amber-to-pdb
          parameters:
            output_solv_crd_filename:
              runtimeValue:
                constant: structure.solv.crd
            output_solv_pdb_filename:
              runtimeValue:
                constant: structure.solv.pdb
            output_solv_top_filename:
              runtimeValue:
                constant: structure.solv.parmtop
            properties:
              runtimeValue:
                constant:
                  box_type: truncated_octahedron
                  distance_to_molecule: '9.0'
                  forcefield:
                  - protein.ff14SB
                  water_type: TIP3PBOX
        taskInfo:
          name: create-water-box
      fetch-pdb-protein:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-fetch-pdb-protein
        inputs:
          parameters:
            pdb_code:
              componentInputParameter: pdb_code
        taskInfo:
          name: fetch-pdb-protein
      prep-amber-to-pdb:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-prep-amber-to-pdb
        dependentTasks:
        - prep-amber-topology
        - simulate-one-input-2
        inputs:
          artifacts:
            input_minimization_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: simulate-one-input-2
            input_topology_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: prep-amber-topology
        taskInfo:
          name: prep-amber-to-pdb
      prep-amber-topology:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-prep-amber-topology
        dependentTasks:
        - prep-pdb-for-amber
        inputs:
          artifacts:
            input_path:
              taskOutputArtifact:
                outputArtifactKey: output_amber_dir_path
                producerTask: prep-pdb-for-amber
          parameters:
            properties:
              runtimeValue:
                constant:
                  forcefield:
                  - protein.ff14SB
        taskInfo:
          name: prep-amber-topology
      prep-pdb-for-amber:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-prep-pdb-for-amber
        dependentTasks:
        - fetch-pdb-protein
        inputs:
          artifacts:
            input_pdb_dir_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: fetch-pdb-protein
        taskInfo:
          name: prep-pdb-for-amber
      simulate-one-input:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-simulate-one-input
        dependentTasks:
        - prep-amber-topology
        inputs:
          artifacts:
            input_top_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: prep-amber-topology
          parameters:
            input_crd_filename:
              runtimeValue:
                constant: structure.leap.crd
            input_top_filename:
              runtimeValue:
                constant: structure.leap.top
            output_log_filename:
              runtimeValue:
                constant: sander.h_min.log
            output_rst_filename:
              runtimeValue:
                constant: sander.h_min.rst
            output_traj_filename:
              runtimeValue:
                constant: sander.h_min.x
            properties:
              runtimeValue:
                constant:
                  mdin:
                    maxcyc: 500.0
                    ntpr: 5.0
                    ntr: 1.0
                    restraint_wt: 50.0
                    restraintmask: '":*&!@H="'
                  simulation_type: min_vacuo
        taskInfo:
          name: simulate-one-input
      simulate-one-input-2:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-simulate-one-input-2
        dependentTasks:
        - prep-amber-topology
        inputs:
          artifacts:
            input_top_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: prep-amber-topology
          parameters:
            input_crd_filename:
              runtimeValue:
                constant: structure.leap.crd
            input_top_filename:
              runtimeValue:
                constant: structure.leap.top
            output_log_filename:
              runtimeValue:
                constant: sander.n_min.log
            output_rst_filename:
              runtimeValue:
                constant: sander.n_min.rst
            output_traj_filename:
              runtimeValue:
                constant: sander.n_min.x
            properties:
              runtimeValue:
                constant:
                  mdin:
                    maxcyc: 500.0
                    ntpr: 5.0
                    ntr: 1.0
                    restraint_wt: 50.0
                    restraintmask: '":*&!@H="'
                  simulation_type: min_vacuo
        taskInfo:
          name: simulate-one-input-2
      simulate-one-input-3:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-simulate-one-input-3
        dependentTasks:
        - add-ions
        inputs:
          artifacts:
            input_top_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: add-ions
          parameters:
            input_crd_filename:
              runtimeValue:
                constant: structure.ions.crd
            input_top_filename:
              runtimeValue:
                constant: structure.ions.parmtop
            output_log_filename:
              runtimeValue:
                constant: sander.min.log
            output_rst_filename:
              runtimeValue:
                constant: sander.min.rst
            output_traj_filename:
              runtimeValue:
                constant: sander.min.x
            properties:
              runtimeValue:
                constant:
                  mdin:
                    maxcyc: 300.0
                    ntr: 1.0
                    restraint_wt: 50.0
                    restraintmask: '"!:WAT,Cl-,Na+"'
                  simulation_type: minimization
        taskInfo:
          name: simulate-one-input-3
      simulate-two-inputs:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-simulate-two-inputs
        dependentTasks:
        - add-ions
        - simulate-one-input-3
        inputs:
          artifacts:
            input_crd_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: simulate-one-input-3
            input_top_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: add-ions
          parameters:
            input_crd_filename:
              runtimeValue:
                constant: sander.min.rst
            input_top_filename:
              runtimeValue:
                constant: structure.ions.parmtop
            output_log_filename:
              runtimeValue:
                constant: sander.heat.log
            output_rst_filename:
              runtimeValue:
                constant: sander.heat.rst
            output_traj_filename:
              runtimeValue:
                constant: sander.heat.netcdf
            properties:
              runtimeValue:
                constant:
                  mdin:
                    nstlim: 2500.0
                    ntr: 1.0
                    restraint_wt: 10.0
                    restraintmask: '"!:WAT,Cl-,Na+"'
                  simulation_type: heat
        taskInfo:
          name: simulate-two-inputs
      simulate-two-inputs-2:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-simulate-two-inputs-2
        dependentTasks:
        - add-ions
        - simulate-two-inputs
        inputs:
          artifacts:
            input_crd_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: simulate-two-inputs
            input_top_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: add-ions
          parameters:
            input_crd_filename:
              runtimeValue:
                constant: sander.heat.rst
            input_top_filename:
              runtimeValue:
                constant: structure.ions.parmtop
            output_log_filename:
              runtimeValue:
                constant: sander.nvt.log
            output_rst_filename:
              runtimeValue:
                constant: sander.nvt.rst
            output_traj_filename:
              runtimeValue:
                constant: sander.nvt.netcdf
            properties:
              runtimeValue:
                constant:
                  mdin:
                    nstlim: 500.0
                    ntr: 1.0
                    restraint_wt: 5.0
                    restraintmask: '"!:WAT,Cl-,Na+ & !@H="'
                  simulation_type: nvt
        taskInfo:
          name: simulate-two-inputs-2
      simulate-two-inputs-3:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-simulate-two-inputs-3
        dependentTasks:
        - add-ions
        - simulate-two-inputs-2
        inputs:
          artifacts:
            input_crd_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: simulate-two-inputs-2
            input_top_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: add-ions
          parameters:
            input_crd_filename:
              runtimeValue:
                constant: sander.nvt.rst
            input_top_filename:
              runtimeValue:
                constant: structure.ions.parmtop
            output_log_filename:
              runtimeValue:
                constant: sander.npt.log
            output_rst_filename:
              runtimeValue:
                constant: sander.npt.rst
            output_traj_filename:
              runtimeValue:
                constant: sander.npt.netcdf
            properties:
              runtimeValue:
                constant:
                  mdin:
                    nstlim: 500.0
                    ntr: 1.0
                    restraint_wt: 2.5
                    restraintmask: '"!:WAT,Cl-,Na+ & !@H="'
                  simulation_type: npt
        taskInfo:
          name: simulate-two-inputs-3
      simulate-two-inputs-4:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-simulate-two-inputs-4
        dependentTasks:
        - add-ions
        - simulate-two-inputs-3
        inputs:
          artifacts:
            input_crd_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: simulate-two-inputs-3
            input_top_path:
              taskOutputArtifact:
                outputArtifactKey: output_path
                producerTask: add-ions
          parameters:
            input_crd_filename:
              runtimeValue:
                constant: sander.npt.rst
            input_top_filename:
              runtimeValue:
                constant: structure.ions.parmtop
            output_log_filename:
              runtimeValue:
                constant: sander.free.log
            output_rst_filename:
              runtimeValue:
                constant: sander.free.rst
            output_traj_filename:
              runtimeValue:
                constant: sander.free.netcdf
            properties:
              runtimeValue:
                constant:
                  mdin:
                    nstlim: 2500.0
                    ntwx: 500.0
                  simulation_type: free
        taskInfo:
          name: simulate-two-inputs-4
  inputDefinitions:
    parameters:
      pdb_code:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.11.0
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-add-ions:
          imagePullPolicy: Never
        exec-create-water-box:
          imagePullPolicy: Never
        exec-prep-amber-to-pdb:
          imagePullPolicy: Never
        exec-prep-amber-topology:
          imagePullPolicy: Never
        exec-simulate-one-input:
          imagePullPolicy: Never
        exec-simulate-one-input-2:
          imagePullPolicy: Never
        exec-simulate-one-input-3:
          imagePullPolicy: Never
        exec-simulate-two-inputs:
          imagePullPolicy: Never
        exec-simulate-two-inputs-2:
          imagePullPolicy: Never
        exec-simulate-two-inputs-3:
          imagePullPolicy: Never
        exec-simulate-two-inputs-4:
          imagePullPolicy: Never
